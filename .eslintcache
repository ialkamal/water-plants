[{"C:\\Users\\ismai\\OneDrive\\Documents\\projects\\U03\\S12-BW\\water-plants\\src\\index.js":"1","C:\\Users\\ismai\\OneDrive\\Documents\\projects\\U03\\S12-BW\\water-plants\\src\\reportWebVitals.js":"2","C:\\Users\\ismai\\OneDrive\\Documents\\projects\\U03\\S12-BW\\water-plants\\src\\App.js":"3","C:\\Users\\ismai\\OneDrive\\Documents\\projects\\U03\\S12-BW\\water-plants\\src\\store\\reducers\\index.js":"4","C:\\Users\\ismai\\OneDrive\\Documents\\projects\\U03\\S12-BW\\water-plants\\src\\utils\\PrivateRoute.js":"5","C:\\Users\\ismai\\OneDrive\\Documents\\projects\\U03\\S12-BW\\water-plants\\src\\protected\\Plants.js":"6","C:\\Users\\ismai\\OneDrive\\Documents\\projects\\U03\\S12-BW\\water-plants\\src\\protected\\PlantDetails.js":"7","C:\\Users\\ismai\\OneDrive\\Documents\\projects\\U03\\S12-BW\\water-plants\\src\\protected\\AddPlant.js":"8","C:\\Users\\ismai\\OneDrive\\Documents\\projects\\U03\\S12-BW\\water-plants\\src\\protected\\UserProfile.js":"9","C:\\Users\\ismai\\OneDrive\\Documents\\projects\\U03\\S12-BW\\water-plants\\src\\components\\Navbar.js":"10","C:\\Users\\ismai\\OneDrive\\Documents\\projects\\U03\\S12-BW\\water-plants\\src\\protected\\EditProfile.js":"11","C:\\Users\\ismai\\OneDrive\\Documents\\projects\\U03\\S12-BW\\water-plants\\src\\components\\SignUp.js":"12","C:\\Users\\ismai\\OneDrive\\Documents\\projects\\U03\\S12-BW\\water-plants\\src\\components\\LogIn.js":"13","C:\\Users\\ismai\\OneDrive\\Documents\\projects\\U03\\S12-BW\\water-plants\\src\\protected\\EditPlant.js":"14","C:\\Users\\ismai\\OneDrive\\Documents\\projects\\U03\\S12-BW\\water-plants\\src\\store\\reducers\\usersReducer.js":"15","C:\\Users\\ismai\\OneDrive\\Documents\\projects\\U03\\S12-BW\\water-plants\\src\\store\\reducers\\plantsReducer.js":"16","C:\\Users\\ismai\\OneDrive\\Documents\\projects\\U03\\S12-BW\\water-plants\\src\\utils\\axiosWithAuth.js":"17","C:\\Users\\ismai\\OneDrive\\Documents\\projects\\U03\\S12-BW\\water-plants\\src\\store\\actions\\index.js":"18","C:\\Users\\ismai\\OneDrive\\Documents\\projects\\U03\\S12-BW\\water-plants\\src\\utils\\calculateWaterFrequency.js":"19"},{"size":948,"mtime":1608225359231,"results":"20","hashOfConfig":"21"},{"size":375,"mtime":1608225359231,"results":"22","hashOfConfig":"21"},{"size":1349,"mtime":1608316227321,"results":"23","hashOfConfig":"21"},{"size":221,"mtime":1608225359233,"results":"24","hashOfConfig":"21"},{"size":377,"mtime":1608225359235,"results":"25","hashOfConfig":"21"},{"size":3448,"mtime":1610390818801,"results":"26","hashOfConfig":"21"},{"size":2298,"mtime":1610390919741,"results":"27","hashOfConfig":"21"},{"size":5846,"mtime":1610144183376,"results":"28","hashOfConfig":"21"},{"size":1346,"mtime":1610067232449,"results":"29","hashOfConfig":"21"},{"size":1073,"mtime":1610391184527,"results":"30","hashOfConfig":"21"},{"size":3964,"mtime":1610067232448,"results":"31","hashOfConfig":"21"},{"size":4382,"mtime":1610067841384,"results":"32","hashOfConfig":"21"},{"size":4221,"mtime":1610391376361,"results":"33","hashOfConfig":"21"},{"size":5799,"mtime":1610389490268,"results":"34","hashOfConfig":"21"},{"size":1380,"mtime":1609902120316,"results":"35","hashOfConfig":"21"},{"size":1532,"mtime":1609969017021,"results":"36","hashOfConfig":"21"},{"size":366,"mtime":1608351786863,"results":"37","hashOfConfig":"21"},{"size":6296,"mtime":1610144794864,"results":"38","hashOfConfig":"21"},{"size":1539,"mtime":1610143971299,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"9yiq0a",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\ismai\\OneDrive\\Documents\\projects\\U03\\S12-BW\\water-plants\\src\\index.js",[],["86","87"],"C:\\Users\\ismai\\OneDrive\\Documents\\projects\\U03\\S12-BW\\water-plants\\src\\reportWebVitals.js",[],"C:\\Users\\ismai\\OneDrive\\Documents\\projects\\U03\\S12-BW\\water-plants\\src\\App.js",[],"C:\\Users\\ismai\\OneDrive\\Documents\\projects\\U03\\S12-BW\\water-plants\\src\\store\\reducers\\index.js",[],"C:\\Users\\ismai\\OneDrive\\Documents\\projects\\U03\\S12-BW\\water-plants\\src\\utils\\PrivateRoute.js",[],"C:\\Users\\ismai\\OneDrive\\Documents\\projects\\U03\\S12-BW\\water-plants\\src\\protected\\Plants.js",["88"],"import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getPlants, deletePlant } from \"../store/actions\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport \"./Plants.css\";\r\n\r\nconst Button = styled.button`\r\n  font-size: 1em;\r\n  margin: 1em;\r\n  padding: 0.25em 1em;\r\n  border-radius: 3px;\r\n  display: flex;\r\n  text-align: center;\r\n  width: 95px;\r\n  margin-left: 48%;\r\n  margin-right: 45%;\r\n`;\r\n\r\nconst Plants = (props) => {\r\n  useEffect(() => {\r\n    if (!props.isUploading) props.getPlants();\r\n  }, [props.isUploading]);\r\n\r\n  const handleDelete = (id) => {\r\n    props.deletePlant(id);\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginTop: \"100px\" }}>\r\n      <h2 style={{ marginBottom: \"3rem\" }}>Plants</h2>\r\n      {props.isLoading || props.isUploading ? (\r\n        <pre>Loading...</pre>\r\n      ) : (\r\n        <>\r\n          <NavLink className=\"AddPlant\" to=\"/plants/add\">\r\n            Add Plant\r\n          </NavLink>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexFlow: \"row wrap\",\r\n              justifyContent: \"center\",\r\n              marginTop: \"20px\",\r\n            }}\r\n          >\r\n            {props.isError ? (\r\n              <pre>Error: {props.error}</pre>\r\n            ) : (\r\n              props.plants.map((plant) => (\r\n                <div key={plant.id} style={{ width: \"600px\" }}>\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      flexFlow: \"row wrap\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                      margin: \"0 auto\",\r\n                      padding: \"20px\",\r\n                    }}\r\n                  >\r\n                    <img src={plant.image} alt={plant.nickname} height=\"300\" />\r\n                    <div style={{ marginLeft: \"30px\", textAlign: \"left\" }}>\r\n                      <NavLink\r\n                        style={{\r\n                          textDecoration: \"none\",\r\n                          fontWeight: \"500\",\r\n                          fontSize: \"1.2rem\",\r\n                          color: \"#45b649\",\r\n                        }}\r\n                        to={`/plants/${plant.id}`}\r\n                      >\r\n                        <p>{plant.nickname}</p>\r\n                      </NavLink>\r\n                      <p>\r\n                        <span style={{ fontWeight: \"500\" }}>Binomial:</span>{\" \"}\r\n                        {plant.binomial}\r\n                      </p>\r\n                      <p>\r\n                        <span style={{ fontWeight: \"500\" }}>\r\n                          H2O Frequency:\r\n                        </span>{\" \"}\r\n                        {plant.water_frequency} ðŸ’¦ / month\r\n                      </p>\r\n                      <Button onClick={() => handleDelete(plant.id)}>\r\n                        Delete\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    plants: state.plants.plants,\r\n    isLoading: state.plants.isLoading,\r\n    isUploading: state.plants.isUploading,\r\n    isError: state.plants.isError,\r\n    error: state.plants.error,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { getPlants, deletePlant })(Plants);\r\n","C:\\Users\\ismai\\OneDrive\\Documents\\projects\\U03\\S12-BW\\water-plants\\src\\protected\\PlantDetails.js",["89"],"import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { getPlant } from \"../store/actions\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Button = styled.button`\r\n  font-size: 1em;\r\n  margin: 1em;\r\n  padding: 0.25em 1em;\r\n  border-radius: 3px;\r\n  display: flex;\r\n  text-align: center;\r\n  width: 95px;\r\n  margin-left: 48%;\r\n  margin-right: 45%;\r\n`;\r\n\r\nconst PlantDetails = (props) => {\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (!props.isUploading) props.getPlant(id);\r\n  }, [props.isUploading]);\r\n\r\n  return (\r\n    <div style={{ marginTop: \"100px\" }}>\r\n      <h2>Plant Details</h2>\r\n      {props.isLoading || props.isUploading ? (\r\n        <pre>Loading...</pre>\r\n      ) : props.isError ? (\r\n        <pre>Error: {props.error}</pre>\r\n      ) : (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            margin: \"20px auto\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <img\r\n            src={props.plant.image}\r\n            alt={props.plant.nickname}\r\n            height=\"300\"\r\n          />\r\n          <div style={{ marginLeft: \"30px\", textAlign: \"left\" }}>\r\n            <p>\r\n              <span style={{ fontWeight: \"500\" }}>Nickname:</span>{\" \"}\r\n              {props.plant.nickname}\r\n            </p>\r\n            <p>\r\n              <span style={{ fontWeight: \"500\" }}>Binomial:</span>{\" \"}\r\n              {props.plant.binomial}\r\n            </p>\r\n            <p>\r\n              <span style={{ fontWeight: \"500\" }}>H2O Frequency:</span>{\" \"}\r\n              {props.plant.water_frequency} ðŸ’¦ / month\r\n            </p>\r\n            <Button onClick={() => history.push(`/plants/${id}/edit`)}>\r\n              Edit\r\n            </Button>\r\n            <Button onClick={() => history.push(\"/plants\")}>Back</Button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    plant: state.plants.plant,\r\n    isLoading: state.plants.isLoading,\r\n    isUploading: state.plants.isUploading,\r\n    isError: state.plants.isError,\r\n    error: state.plants.error,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { getPlant })(PlantDetails);\r\n","C:\\Users\\ismai\\OneDrive\\Documents\\projects\\U03\\S12-BW\\water-plants\\src\\protected\\AddPlant.js",["90","91","92"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { editPlant, addPlant, getH2OHint } from \"../store/actions\";\r\nimport styled, { css } from \"styled-components\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst sharedStyles = css`\r\n  height: 40px;\r\n  border-radius: 12px;\r\n  border: 3px solid #9cc799;\r\n  margin: 10px 0;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst FormWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  height: 70vh;\r\n  padding: 0 20px;\r\n`;\r\nconst StyledForm = styled.form`\r\n  width: 100%;\r\n  max-width: 500px;\r\n  padding: 2.5rem;\r\n  border-radius: 20px;\r\n  background-color: #9cc799;\r\n  box-sizing: border-box;\r\n  box-shadow: 0px 0px 20px rgba(138, 138, 138, 0.5);\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\ndisplay:block;\r\nwidth 100%;\r\n${sharedStyles}\r\n&:focus{\r\n  outline:none;\r\n  border: 3px solid #45b649;\r\n}`;\r\n\r\nconst StyledUpload = styled.label`\r\n  cursor: pointer;\r\n  background: #45b649;\r\n  display: block;\r\n  width: 100%;\r\n  height: 40px;\r\n  border-radius: 12px;\r\n  border: 3px solid #9cc799;\r\n  margin: 10px 0;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n  font-family: sans-serif;\r\n  font-weight: 600;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: white;\r\n\r\n  &:focus {\r\n    outline: none;\r\n    transition: ease-in 0.2s;\r\n    border: 3px solid #fff;\r\n  }\r\n`;\r\n\r\nconst Hidden = styled.input`\r\n  display: none;\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  padding: 1rem;\r\n  background-color: #45b649;\r\n  border-radius: 100px;\r\n  margin: 20px 10px;\r\n  width: 25%;\r\n  border: none;\r\n  color: white;\r\n  font-weight: 800;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background: white;\r\n    color: #45b649;\r\n    transition: ease-in 0.2s;\r\n  }\r\n\r\n  &:disabled {\r\n    opacity: 0.5;\r\n    cursor: default;\r\n\r\n    &:hover {\r\n      background: #45b649;\r\n      color: white;\r\n      transition: ease-in 0.2s;\r\n    }\r\n  }\r\n`;\r\nconst ErrorMessage = styled.div`\r\n  color: red;\r\n  font-size: 1rem;\r\n  margin: 20px;\r\n  height: 1rem;\r\n`;\r\n\r\nconst AddPlant = (props) => {\r\n  const initialState = {\r\n    nickname: \"\",\r\n    binomial: \"\",\r\n    water_frequency: \"\",\r\n    image: \"\",\r\n  };\r\n\r\n  const [plant, setPlant] = useState(initialState);\r\n  const [file, setFile] = useState(\"\");\r\n  const [errors, setErrors] = useState({\r\n    nickname: \"\",\r\n    binomial: \"\",\r\n    water_frequency: \"\",\r\n    image: \"\",\r\n  });\r\n  const [disabled, setDisabled] = useState(true);\r\n\r\n  const schema = Yup.object().shape({\r\n    nickname: Yup.string(\"Must be a valid string\")\r\n      .required(\"Nickname is required\")\r\n      .min(2, \"Username must be at least 2 characters long\"),\r\n    binomial: Yup.string(\"Must be a valid string\")\r\n      .required(\"Binomial is required\")\r\n      .min(2, \"Username must be at least 2 characters long\"),\r\n    water_frequency: Yup.number()\r\n      .required(\"Must be a postive number value\")\r\n      .positive(\"Must be a postive number value\")\r\n      .integer(\"Must be a postive number value\"),\r\n    image: Yup.mixed().default(\"n/a\"),\r\n  });\r\n\r\n  const setFormErrors = (name, value) => {\r\n    Yup.reach(schema, name)\r\n      .validate(value)\r\n      .then(() => setErrors({ ...errors, [name]: \"\" }))\r\n      .catch((err) => setErrors({ ...errors, [name]: err.errors[0] }));\r\n  };\r\n\r\n  const history = useHistory();\r\n\r\n  const handleCancel = (e) => {\r\n    e.preventDefault();\r\n    history.goBack();\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setPlant({\r\n      ...plant,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    setFormErrors(e.target.name, e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    schema.isValid(plant).then((valid) => setDisabled(!valid));\r\n  }, [plant]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    //save to the server\r\n    props.addPlant(plant, file);\r\n    setPlant(initialState);\r\n    history.push(\"/plants\");\r\n  };\r\n\r\n  const handleH2OHint = (e) => {\r\n    e.preventDefault();\r\n    props.getH2OHint(plant.nickname);\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginTop: \"100px\" }}>\r\n      <FormWrapper>\r\n        <h2>Add Plant</h2>\r\n\r\n        <StyledForm onSubmit={handleSubmit}>\r\n          <StyledInput\r\n            type=\"text\"\r\n            id=\"nickname\"\r\n            placeholder=\"Nickname\"\r\n            name=\"nickname\"\r\n            value={plant.nickname}\r\n            onChange={handleChange}\r\n          />\r\n          <StyledInput\r\n            type=\"text\"\r\n            id=\"binomial\"\r\n            name=\"binomial\"\r\n            placeholder=\"Binomial\"\r\n            value={plant.binomial}\r\n            onChange={handleChange}\r\n          />\r\n          <StyledInput\r\n            type=\"text\"\r\n            placeholder=\"Water Frequency\"\r\n            id=\"water_frequency\"\r\n            name=\"water_frequency\"\r\n            value={plant.water_frequency}\r\n            onChange={handleChange}\r\n          />\r\n          <button onClick={handleH2OHint}>Give me a hint!</button> <br />\r\n          <label htmlFor=\"image\">Upload Image</label>\r\n          <input\r\n            type=\"file\"\r\n            name=\"image\"\r\n            id=\"image\"\r\n            onChange={(e) => setFile(e.target.files[0])}\r\n          />\r\n          <StyledButton type=\"submit\" disabled={disabled}>\r\n            Add\r\n          </StyledButton>\r\n          <StyledButton onClick={handleCancel}>Cancel</StyledButton>\r\n        </StyledForm>\r\n\r\n        <ErrorMessage>\r\n          <p>{errors.nickname}</p>\r\n          <p>{errors.binomial}</p>\r\n          <p>{errors.water_frequency}</p>\r\n        </ErrorMessage>\r\n      </FormWrapper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    plant: state.plants.plant,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { editPlant, addPlant, getH2OHint })(\r\n  AddPlant\r\n);\r\n","C:\\Users\\ismai\\OneDrive\\Documents\\projects\\U03\\S12-BW\\water-plants\\src\\protected\\UserProfile.js",["93"],"import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getProfile } from \"../store/actions\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Button = styled.button`\r\n  font-size: 1em;\r\n  margin: 1em;\r\n  padding: 0.25em 1em;\r\n  border-radius: 3px;\r\n  display: flex;\r\n  text-align: center;\r\n  width: 95px;\r\n  margin-left: 48%;\r\n  margin-right: 45%;\r\n`;\r\n\r\nconst UserProfile = (props) => {\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    props.getProfile();\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ marginTop: \"200px\" }}>\r\n      <h2>Profile</h2>\r\n      {props.isLoading ? (\r\n        <pre>Loading...</pre>\r\n      ) : props.isError ? (\r\n        <pre>Error: {props.error}</pre>\r\n      ) : (\r\n        <>\r\n          <p>Username: {props.user.username}</p>\r\n          <p>Phone: {props.user.phone}</p>\r\n        </>\r\n      )}\r\n      <Button onClick={() => history.push(`/profile/edit`)}>Edit</Button>\r\n      <Button onClick={() => history.goBack()}>Back</Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.users.user,\r\n    isLoading: state.users.isLoading,\r\n    isError: state.users.isError,\r\n    error: state.users.error,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { getProfile })(UserProfile);\r\n","C:\\Users\\ismai\\OneDrive\\Documents\\projects\\U03\\S12-BW\\water-plants\\src\\components\\Navbar.js",[],"C:\\Users\\ismai\\OneDrive\\Documents\\projects\\U03\\S12-BW\\water-plants\\src\\protected\\EditProfile.js",["94","95"],"import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { editProfile, editPassword, getProfile } from \"../store/actions\";\r\nimport styled from \"styled-components\"\r\nimport reactDom from \"react-dom\"\r\n\r\n\r\nconst EditProfile = (props) => {\r\n  const initialPassword = {\r\n    oldPassword: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  const initialUser = JSON.parse(window.localStorage.getItem(\"user\"));\r\n\r\n  const [user, setUser] = useState(initialUser);\r\n  const [password, setPassword] = useState(initialPassword);\r\n\r\n  const history = useHistory();\r\n\r\n  const handleCancel = (e) => {\r\n    e.preventDefault();\r\n    history.goBack();\r\n  };\r\n\r\n  const handleProfileChange = (e) => {\r\n    setUser({ ...user, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handlePasswordChange = (e) => {\r\n    setPassword({ ...password, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    //save to the server\r\n    props.editProfile(user);\r\n    if (password.oldPassword !== \"\" && password.password !== \"\") {\r\n      props.editPassword(password);\r\n      setPassword(initialPassword);\r\n    }\r\n    setUser(initialUser);\r\n    history.push(\"/profile\");\r\n  }; \r\n\r\n  \r\n  \r\n\r\n  const FormContainer = styled.div`\r\n  margin-top: 9rem;\r\n`;\r\n  const Form = styled.form``;\r\n\r\n  const FormGroup = styled.div``;\r\n\r\n  const Label = styled.h3``;\r\n\r\n  const Button = styled.button`\r\n  font-size: 1em;\r\n  margin: 1em;\r\n  padding: 0.25em 1em;\r\n  border-radius: 3px;\r\n  display: flex;\r\n  text-align: center;\r\n  width: 95px;\r\n  margin-left:48%;\r\n  margin-right:45%;\r\n`;\r\n\r\n  const Input = styled.input.attrs((props) => ({\r\n    type: \"text\",\r\n    size: props.size || \"1em\",\r\n  }))`\r\n  border: 2px solid black;\r\n  padding: 0.5em;\r\n  margin: 0.5em;\r\n  color: ${(props) => props.inputColor || \"black\"};\r\n  background: #9cc799;\r\n  border: none;\r\n  border-radius: 3px;\r\n`;\r\n\r\n  const Upload = styled.input.attrs((props) => ({\r\n    type: \"file\",\r\n    size: props.size || \"1em\",\r\n  }))`\r\n  border: 2px solid black;\r\n  padding: 0.5em;\r\n  margin: 0.5em;\r\n  color: ${(props) => props.inputColor || \"black\"};\r\n  background: #9cc799;\r\n  border: none;\r\n  border-radius: 3px;\r\n`\r\n\r\n\r\n  return (\r\n    <FormContainer>\r\n      <header>\r\n      <h2>Edit User Profile</h2>\r\n      </header>\r\n\r\n      <Form onSubmit={handleSubmit}>\r\n        <FormGroup>\r\n\r\n      <Label>Profile Picture</Label> \r\n      <Upload type=\"file\" \r\n      accept=\"image/*\" \r\n      onChange={null} />\r\n      <img\r\n       ref={null}\r\n       />\r\n        \r\n        <Label  htmlFor=\"username\">Username</Label>\r\n        <Input\r\n          type=\"text\"\r\n          id=\"username\"\r\n          name=\"username\"\r\n          disabled={true}\r\n          value={user.username}\r\n        />\r\n        <Label htmlFor=\"phone\">Phone</Label>\r\n        <Input\r\n          type=\"text\"\r\n          id=\"phone\"\r\n          name=\"phone\"\r\n          value={user.phone}\r\n          onChange={handleProfileChange}\r\n        />\r\n        <Label  htmlFor=\"old-password\">Old Password</Label>\r\n        <Input\r\n          type=\"password\"\r\n          id=\"old-password\"\r\n          name=\"oldPassword\"\r\n          value={password.oldPassword}\r\n          onChange={handlePasswordChange}\r\n        />\r\n        <Label htmlFor=\"new-password\">New Password</Label>\r\n        <Input\r\n          type=\"password\"\r\n          id=\"new-password\"\r\n          name=\"password\"\r\n          value={password.password}\r\n          onChange={handlePasswordChange}\r\n        />\r\n\r\n        <Button type=\"submit\">Save</Button>\r\n        <Button onClick={handleCancel}>Cancel</Button>\r\n      </FormGroup>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.users.user,\r\n    isError: state.users.isError,\r\n    error: state.users.error,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  editProfile,\r\n  editPassword,\r\n  getProfile,\r\n})(EditProfile);\r\n","C:\\Users\\ismai\\OneDrive\\Documents\\projects\\U03\\S12-BW\\water-plants\\src\\components\\SignUp.js",["96"],"import React, { useState, useEffect } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport axiosWithAuth from \"../utils/axiosWithAuth\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nconst sharedStyles = css`\r\n  height: 40px;\r\n  border-radius: 10px;\r\n  border: 3px solid #9cc799;\r\n  margin: 20px 0px;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst FormWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  height:80vh;\r\n  \r\n  padding: 0 20px;\r\n`;\r\nconst StyledForm = styled.form`\r\n  width: 100%;\r\n  max-width: 500px;\r\n  padding: 2.5rem;\r\n  border-radius: 20px;\r\n  background-color: #9cc799;\r\n  box-sizing: border-box;\r\n  box-shadow: 0px 0px 20px rgba(138, 138, 138, 0.5);\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\ndisplay:block;\r\nwidth 100%;\r\n${sharedStyles};\r\n\r\n&:focus{\r\n  outline:none;\r\n  border: 3px solid #2c730e;\r\n  transition: .5s ease-in;\r\n\r\n}`;\r\n\r\nconst StyledButton = styled.button`\r\n  padding: 1rem;\r\n  \r\n  border-radius: 100px;\r\n  margin-top:10px;\r\n  width: 50%;\r\n  border: 3px white solid;\r\n  background-color:white;\r\n  color:#9cc799;\r\n  font-weight: 800;\r\n  cursor:pointer;\r\n  transition: .2s ease-in;\r\n\r\n\r\n  &:disabled {\r\n    opacity: 0.5;\r\n    cursor:default;\r\n  }\r\n`;\r\n\r\nconst ErrorMessage = styled.p`\r\n  color:red;\r\n  font-size:1rem;\r\n  margin:20px;\r\n  height:1rem;`\r\n  \r\n\r\nconst SignUp = () => {\r\n\r\n  const initialCredentials = {\r\n    username: \"\",\r\n    phone: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  const history = useHistory();\r\n\r\n  const [credentials, setCredentials] = useState(initialCredentials);\r\n  const [disabled, setDisabled] = useState(true);\r\n\r\n  const [errors, setErrors] = useState({\r\n    \r\n    username: \"\",\r\n    phone: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const schema = Yup.object().shape({\r\n    username: Yup.string(\"Must be a valid string\")\r\n      .required(\"Username is required\")\r\n      .min(2,'Username must be at least 2 characters long'),\r\n    phone: Yup.string()\r\n      .matches(/^([0-9]{3})[0-9]{3}[0-9]{4}$/, \"Phone is required Ex: 1234567890\")\r\n      .required(\"\"),\r\n    password: Yup.string()\r\n      .min(4, \"Must be a minimum of 4 characters\")\r\n      .required(\"Password is required\"),\r\n  });\r\n\r\n  const setFormErrors = (name, value) => {\r\n    Yup.reach(schema,name).validate(value)\r\n        .then(()=>setErrors({...errors, [name]:''}))\r\n        .catch((err)=>setErrors({...errors, [name]:err.errors[0]}))\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    setCredentials({ ...credentials, [e.target.name]: e.target.value });\r\n    setFormErrors(e.target.name,e.target.value)\r\n  };\r\n\r\n  useEffect(() => {\r\n    schema.isValid(credentials).then((valid) => setDisabled(!valid));\r\n  }, [credentials]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    //handle sending credentials to server\r\n    axiosWithAuth()\r\n      .post(\"/api/users/register\", credentials)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        history.push(\"/\");\r\n      })\r\n      .catch((err) => alert(err.message));\r\n\r\n    setCredentials(initialCredentials);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FormWrapper>\r\n        <h2>Sign Up</h2>\r\n        <StyledForm onSubmit={handleSubmit}>\r\n          <StyledInput\r\n            type=\"text\"\r\n            name=\"username\"\r\n            autoComplete=\"username\"\r\n            value={credentials.username}\r\n            placeholder=\"username\"\r\n            onChange={handleChange}\r\n          />\r\n          \r\n          <StyledInput\r\n            type=\"tel\"\r\n            name=\"phone\"\r\n            autoComplete=\"phone-number\"\r\n            value={credentials.phone}\r\n            placeholder=\"phone\"\r\n            onChange={handleChange}\r\n          />\r\n          <StyledInput\r\n            type=\"password\"\r\n            name=\"password\"\r\n            autoComplete=\"new-password\"\r\n            value={credentials.password}\r\n            placeholder=\"password\"\r\n            onChange={handleChange}\r\n          />\r\n\r\n          <StyledButton type=\"submit\" disabled={disabled}>\r\n            Sign Up\r\n          </StyledButton>\r\n\r\n        </StyledForm>\r\n\r\n        <ErrorMessage>\r\n          <div>{errors.phone}</div>\r\n          <div>{errors.password}</div>\r\n          <div>{errors.username}</div>\r\n        </ErrorMessage>\r\n\r\n      </FormWrapper>\r\n\r\n     \r\n\r\n\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","C:\\Users\\ismai\\OneDrive\\Documents\\projects\\U03\\S12-BW\\water-plants\\src\\components\\LogIn.js",[],"C:\\Users\\ismai\\OneDrive\\Documents\\projects\\U03\\S12-BW\\water-plants\\src\\protected\\EditPlant.js",["97","98","99","100"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { editPlant, getH2OHint } from \"../store/actions\";\r\nimport * as Yup from \"yup\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nconst sharedStyles = css`\r\n  height: 40px;\r\n  border-radius: 12px;\r\n  border: 3px solid #9cc799;\r\n  margin: 10px 0;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst FormWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  height: 70vh;\r\n  padding: 0 20px;\r\n`;\r\nconst StyledForm = styled.form`\r\n  width: 100%;\r\n  max-width: 500px;\r\n  padding: 2.5rem;\r\n  border-radius: 20px;\r\n  background-color: #9cc799;\r\n  box-sizing: border-box;\r\n  box-shadow: 0px 0px 20px rgba(138, 138, 138, 0.5);\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\ndisplay:block;\r\nwidth 100%;\r\n${sharedStyles}\r\n&:focus{\r\n  outline:none;\r\n  border: 3px solid #45b649;\r\n}`;\r\n\r\nconst StyledUpload = styled.label`\r\n  cursor: pointer;\r\n  background: #45b649;\r\n  display: block;\r\n  width: 100%;\r\n  height: 40px;\r\n  border-radius: 12px;\r\n  border: 3px solid #9cc799;\r\n  margin: 10px 0;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n  font-family: sans-serif;\r\n  font-weight: 600;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: white;\r\n\r\n  &:focus {\r\n    outline: none;\r\n    transition: ease-in 0.2s;\r\n    border: 3px solid #fff;\r\n  }\r\n`;\r\n\r\nconst Hidden = styled.input`\r\n  display: none;\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  padding: 1rem;\r\n  background-color: #45b649;\r\n  border-radius: 100px;\r\n  margin: 20px 10px;\r\n  width: 25%;\r\n  border: none;\r\n  color: white;\r\n  font-weight: 800;\r\n  cursor: pointer;\r\n  outline: none;\r\n\r\n  &:hover {\r\n    background: white;\r\n    color: #45b649;\r\n    transition: ease-in 0.2s;\r\n  }\r\n\r\n  &:disabled {\r\n    opacity: 0.5;\r\n    cursor: default;\r\n\r\n    &:hover {\r\n      background: #45b649;\r\n      color: white;\r\n      transition: ease-in 0.2s;\r\n    }\r\n  }\r\n`;\r\nconst ErrorMessage = styled.div`\r\n  color: red;\r\n  font-size: 1rem;\r\n  margin: 20px;\r\n  height: 1rem;\r\n`;\r\n\r\nconst EditPlant = (props) => {\r\n  const initialPlant = JSON.parse(window.localStorage.getItem(\"plant\"));\r\n\r\n  const [plant, setPlant] = useState(initialPlant);\r\n  const [file, setFile] = useState(\"\");\r\n  const [errors, setErrors] = useState({\r\n    nickname: \"\",\r\n    binomial: \"\",\r\n    water_frequency: \"\",\r\n    image: \"\",\r\n  });\r\n  const [disabled, setDisabled] = useState(true);\r\n\r\n  const schema = Yup.object().shape({\r\n    nickname: Yup.string(\"Must be a valid string\")\r\n      .required(\"Nickname is required\")\r\n      .min(2, \"Username must be at least 2 characters long\"),\r\n    binomial: Yup.string(\"Must be a valid string\")\r\n      .required(\"Binomial is required\")\r\n      .min(2, \"Username must be at least 2 characters long\"),\r\n    water_frequency: Yup.number()\r\n      .required(\"Must be a postive number value\")\r\n      .positive(\"Must be a postive number value\")\r\n      .integer(\"Must be a postive number value\"),\r\n    image: Yup.mixed().default(\"n/a\"),\r\n  });\r\n\r\n  const setFormErrors = (name, value) => {\r\n    Yup.reach(schema, name)\r\n      .validate(value)\r\n      .then(() => setErrors({ ...errors, [name]: \"\" }))\r\n      .catch((err) => setErrors({ ...errors, [name]: err.errors[0] }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    schema.isValid(plant).then((valid) => setDisabled(!valid));\r\n  }, [plant]);\r\n\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n\r\n  const handleCancel = (e) => {\r\n    e.preventDefault();\r\n    history.goBack();\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setPlant({\r\n      ...plant,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    setFormErrors(e.target.name, e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    //save to the server\r\n    props.editPlant(plant, file);\r\n    //setPlant();\r\n    history.push(`/plants/${id}`);\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginTop: \"100px\" }}>\r\n      <FormWrapper>\r\n        <h2>Edit Plant</h2>\r\n\r\n        <StyledForm onSubmit={handleSubmit}>\r\n          <StyledInput\r\n            type=\"text\"\r\n            id=\"nickname\"\r\n            placeholder=\"Nickname\"\r\n            name=\"nickname\"\r\n            value={plant.nickname}\r\n            onChange={handleChange}\r\n          />\r\n          <StyledInput\r\n            type=\"text\"\r\n            id=\"binomial\"\r\n            name=\"binomial\"\r\n            placeholder=\"Binomial\"\r\n            value={plant.binomial}\r\n            onChange={handleChange}\r\n          />\r\n          <StyledInput\r\n            type=\"text\"\r\n            id=\"water_frequency\"\r\n            name=\"water_frequency\"\r\n            placeholder=\"Water Frequency\"\r\n            value={plant.water_frequency}\r\n            onChange={handleChange}\r\n          />\r\n\r\n          <label htmlFor=\"image\">Image URL</label>\r\n          <input\r\n            type=\"file\"\r\n            name=\"file\"\r\n            onChange={(e) => setFile(e.target.files[0])}\r\n          />\r\n          {/* <input\r\n          type=\"text\"\r\n          id=\"image\"\r\n          name=\"image\"\r\n          value={plant.image}\r\n          onChange={handleChange}\r\n        /> */}\r\n          <StyledButton type=\"submit\" disabled={disabled}>\r\n            Update\r\n          </StyledButton>\r\n          <StyledButton onClick={handleCancel}>Cancel</StyledButton>\r\n        </StyledForm>\r\n\r\n        <ErrorMessage>\r\n          <p>{errors.nickname}</p>\r\n          <p>{errors.binomial}</p>\r\n          <p>{errors.water_frequency}</p>\r\n        </ErrorMessage>\r\n      </FormWrapper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    plant: state.plants.plant,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { editPlant })(EditPlant);\r\n","C:\\Users\\ismai\\OneDrive\\Documents\\projects\\U03\\S12-BW\\water-plants\\src\\store\\reducers\\usersReducer.js",[],"C:\\Users\\ismai\\OneDrive\\Documents\\projects\\U03\\S12-BW\\water-plants\\src\\store\\reducers\\plantsReducer.js",[],"C:\\Users\\ismai\\OneDrive\\Documents\\projects\\U03\\S12-BW\\water-plants\\src\\utils\\axiosWithAuth.js",[],"C:\\Users\\ismai\\OneDrive\\Documents\\projects\\U03\\S12-BW\\water-plants\\src\\store\\actions\\index.js",[],"C:\\Users\\ismai\\OneDrive\\Documents\\projects\\U03\\S12-BW\\water-plants\\src\\utils\\calculateWaterFrequency.js",[],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":23,"column":6,"nodeType":"107","endLine":23,"endColumn":25,"suggestions":"108"},{"ruleId":"105","severity":1,"message":"109","line":25,"column":6,"nodeType":"107","endLine":25,"endColumn":25,"suggestions":"110"},{"ruleId":"111","severity":1,"message":"112","line":44,"column":7,"nodeType":"113","messageId":"114","endLine":44,"endColumn":19},{"ruleId":"111","severity":1,"message":"115","line":69,"column":7,"nodeType":"113","messageId":"114","endLine":69,"endColumn":13},{"ruleId":"105","severity":1,"message":"116","line":164,"column":6,"nodeType":"107","endLine":164,"endColumn":13,"suggestions":"117"},{"ruleId":"105","severity":1,"message":"106","line":24,"column":6,"nodeType":"107","endLine":24,"endColumn":8,"suggestions":"118"},{"ruleId":"111","severity":1,"message":"119","line":6,"column":8,"nodeType":"113","messageId":"114","endLine":6,"endColumn":16},{"ruleId":"120","severity":1,"message":"121","line":111,"column":7,"nodeType":"122","endLine":113,"endColumn":10},{"ruleId":"105","severity":1,"message":"116","line":120,"column":6,"nodeType":"107","endLine":120,"endColumn":19,"suggestions":"123"},{"ruleId":"111","severity":1,"message":"124","line":4,"column":21,"nodeType":"113","messageId":"114","endLine":4,"endColumn":31},{"ruleId":"111","severity":1,"message":"112","line":44,"column":7,"nodeType":"113","messageId":"114","endLine":44,"endColumn":19},{"ruleId":"111","severity":1,"message":"115","line":69,"column":7,"nodeType":"113","messageId":"114","endLine":69,"endColumn":13},{"ruleId":"105","severity":1,"message":"116","line":145,"column":6,"nodeType":"107","endLine":145,"endColumn":13,"suggestions":"125"},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["128"],"React Hook useEffect has missing dependencies: 'id' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["129"],"no-unused-vars","'StyledUpload' is assigned a value but never used.","Identifier","unusedVar","'Hidden' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'schema'. Either include it or remove the dependency array.",["130"],["131"],"'reactDom' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["132"],"'getH2OHint' is defined but never used.",["133"],"no-global-assign","no-unsafe-negation",{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},{"desc":"138","fix":"144"},"Update the dependencies array to be: [props, props.isUploading]",{"range":"145","text":"146"},"Update the dependencies array to be: [id, props, props.isUploading]",{"range":"147","text":"148"},"Update the dependencies array to be: [plant, schema]",{"range":"149","text":"150"},"Update the dependencies array to be: [props]",{"range":"151","text":"152"},"Update the dependencies array to be: [credentials, schema]",{"range":"153","text":"154"},{"range":"155","text":"150"},[577,596],"[props, props.isUploading]",[626,645],"[id, props, props.isUploading]",[3786,3793],"[plant, schema]",[561,563],"[props]",[2750,2763],"[credentials, schema]",[3470,3477]]